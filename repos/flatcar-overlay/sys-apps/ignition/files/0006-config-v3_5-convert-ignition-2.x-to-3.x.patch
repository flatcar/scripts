From 7ad89a545ac31d4308d94c11e5c808e04fd10ce1 Mon Sep 17 00:00:00 2001
From: Mathieu Tortuyaux <mtortuyaux@microsoft.com>
Date: Wed, 25 May 2022 10:20:09 +0200
Subject: [PATCH 06/21] config/v3_5: convert ignition 2.x to 3.x

if the version of ignition is 2.x we convert it to 3.x using
ign-converter.

it should support any 2.x version (or at the least the last 2 releases)

Signed-off-by: Mathieu Tortuyaux <mtortuyaux@microsoft.com>
---
 config/v3_5_experimental/config.go | 37 ++++++++++++++++++++++++++++++
 1 file changed, 37 insertions(+)

diff --git a/config/v3_5_experimental/config.go b/config/v3_5_experimental/config.go
index f0d4bb84..dccc5c4c 100644
--- a/config/v3_5_experimental/config.go
+++ b/config/v3_5_experimental/config.go
@@ -15,9 +15,14 @@
 package v3_5_experimental
 
 import (
+	"encoding/json"
+	"fmt"
+
+	"github.com/flatcar/ignition/config/v2_4"
 	"github.com/flatcar/ignition/v2/config/merge"
 	"github.com/flatcar/ignition/v2/config/shared/errors"
 	"github.com/flatcar/ignition/v2/config/util"
+	"github.com/flatcar/ignition/v2/config/v24tov31"
 	prev "github.com/flatcar/ignition/v2/config/v3_4"
 	"github.com/flatcar/ignition/v2/config/v3_5_experimental/translate"
 	"github.com/flatcar/ignition/v2/config/v3_5_experimental/types"
@@ -67,6 +72,38 @@ func ParseCompatibleVersion(raw []byte) (types.Config, report.Report, error) {
 		return types.Config{}, rpt, err
 	}
 
+	// if the version is 2.x or 1.x, we
+	// convert it to 3.1
+	if version.Major != 3 {
+		// Parse should fallback on every 2.x supported version
+		cfg, _, err := v2_4.Parse(raw)
+		if err != nil || rpt.IsFatal() {
+			return types.Config{}, report.Report{}, fmt.Errorf("unable to parse 2.x ignition: %w", err)
+		}
+
+		/*
+			map[string]string{} is required by the ign-converter
+			Ignition Spec 3 will mount filesystems at the mountpoint specified by path when running.
+			Filesystems no longer have the name field and files, links, and directories no longer specify the filesystem by name.
+			This means to translate filesystems (with the exception of root),
+			you must also provide a mapping of filesystem name to absolute path, e.g.
+			```
+			map[string]string{"var": "/var"}
+			```
+		*/
+		newCfg, err := v24tov31.Translate(cfg, map[string]string{})
+		if err != nil {
+			return types.Config{}, report.Report{}, fmt.Errorf("unable to translate 2.x ignition to 3.1: %w", err)
+
+		}
+
+		// update raw in place to continue with the 3.x logic
+		raw, err = json.Marshal(newCfg)
+		if err != nil {
+			return types.Config{}, report.Report{}, fmt.Errorf("unable to render JSON: %w", err)
+		}
+	}
+
 	if version == types.MaxVersion {
 		return Parse(raw)
 	}
-- 
2.43.2

