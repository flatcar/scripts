From 35cf5f09178b1ab2dfbc7ab04bd9339c5826c21e Mon Sep 17 00:00:00 2001
From: Krzesimir Nowak <knowak@microsoft.com>
Date: Tue, 16 May 2023 17:43:43 +0200
Subject: [PATCH 20/21] internal/exec/stages/mount: Mount /oem

When asking to mount the OEM partition to /usr/share/oem, actually
mount it in /oem. The /usr/share/oem is a symlink pointing to /oem, so
the ignition config (or container linux config) trying to put stuff
into /usr/share/oem, should end up having things in /oem.
---
 internal/exec/stages/mount/mount.go | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/internal/exec/stages/mount/mount.go b/internal/exec/stages/mount/mount.go
index ecf7ce7f..395e772a 100644
--- a/internal/exec/stages/mount/mount.go
+++ b/internal/exec/stages/mount/mount.go
@@ -118,6 +118,11 @@ func (s stage) mountFs(fs types.Filesystem) error {
 	// mount paths shouldn't include symlinks or other non-directories so we can use filepath.Join()
 	// instead of s.JoinPath(). Check that the resulting path is composed of only directories.
 	relpath := *fs.Path
+	// /usr/share/oem is now a symlink to /oem, so make sure we
+	// rather actually try to mount /oem
+	if relpath == "/usr/share/oem" && fs.Device == "/dev/disk/by-label/OEM" {
+		relpath = "/oem"
+	}
 	path := filepath.Join(s.DestDir, relpath)
 	if err := checkForNonDirectories(path); err != nil {
 		return err
-- 
2.43.2

