From 9807190a06785b5db97247fc5c5e4923aff8cd00 Mon Sep 17 00:00:00 2001
From: Mathieu Tortuyaux <mtortuyaux@microsoft.com>
Date: Wed, 2 Feb 2022 13:27:18 +0100
Subject: [PATCH 12/21] config/version: handle configuration version 1

version 2 should be able to translate configuration version 1 but the `GetConfigVersion`
was not able to detect version 1 configuration since for this particular
version the `Version` is an int held into `ignitionVersion` field.

Signed-off-by: Mathieu Tortuyaux <mtortuyaux@microsoft.com>
---
 config/util/config.go | 11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

diff --git a/config/util/config.go b/config/util/config.go
index 3b9bb22f..f81056fa 100644
--- a/config/util/config.go
+++ b/config/util/config.go
@@ -15,6 +15,8 @@
 package util
 
 import (
+	"strconv"
+
 	"github.com/flatcar/ignition/v2/config/shared/errors"
 
 	"github.com/coreos/go-semver/semver"
@@ -25,6 +27,7 @@ type versionStub struct {
 	Ignition struct {
 		Version string
 	}
+	IgnitionVersion int
 }
 
 // GetConfigVersion parses the version from the given raw config
@@ -38,7 +41,13 @@ func GetConfigVersion(raw []byte) (semver.Version, report.Report, error) {
 		return semver.Version{}, rpt, err
 	}
 
-	version, err := semver.NewVersion(stub.Ignition.Version)
+	v := stub.Ignition.Version
+	// if v is empty, it might be a version 1 configuration.
+	if v == "" {
+		v = strconv.Itoa(stub.IgnitionVersion) + ".0.0"
+	}
+
+	version, err := semver.NewVersion(v)
 	if err != nil {
 		return semver.Version{}, report.Report{}, errors.ErrInvalidVersion
 	}
-- 
2.43.2

